{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItems.js","components/helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItems","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","props","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCLdG,EAAe,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCHHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QARvB,kBAWZY,GAXY,4CAAH,sDCCPK,EAAW,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECCd,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLT,KAAMY,EACNL,SAAS,MAEd,WAGZ,CAACb,IAEGc,EDlByBM,CAAapB,GAAjCU,EAF0B,EAEhCJ,KAAcO,EAFkB,EAElBA,QAGtB,OACE,oCACE,4BAAKb,GACJa,GAAW,uBAAGjB,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAGXc,EAAOF,KAAI,SAACC,GACV,OAAO,kBAAC,EAAD,eACLY,IAAKZ,EAAIhB,IACLgB,UEAHa,EAhBM,SAACC,GAAW,IAAD,EACM5C,mBAAS,CAAC,cADhB,mBACvB6C,EADuB,KACX9C,EADW,KAE9B,OACE,6BACE,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BACG8C,EAAWhB,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAAUqB,IAAKrB,EAAUA,SAAUA,UCP7CyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3c238f63.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='text' value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItems = ({ id, title, url }) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CJmyYMVDNlG13yYenSPRTq77E0KnoRtU`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from \"react\";\r\nimport { GifGridItems } from \"./GifGridItems\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n      <div className='card-grid'>\r\n\r\n        {\r\n          images.map((img) => {\r\n            return <GifGridItems\r\n              key={img.id}\r\n              {...img} />\r\n          })\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../components/helpers/getGifs\"\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 1500);\r\n\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory.jsx\";\r\nimport { GiftGrid } from \"./components/GiftGrid.js\";\r\nconst GifExpertApp = (props) => {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n  return (\r\n    <div>\r\n      <h1>Gif Expert App</h1>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GiftGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}